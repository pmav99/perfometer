[tool.poetry]
name = "perfometer"
version = "0.1.0"
description = ""
authors = ["Panos Mavrogiorgos <pmav99@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"


[tool.poetry.group.dev.dependencies]
mypy = "*"
ruff = "*"
ipython = "*"
pandas = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 120
lint.select = [
  "ARG",  # flake8-unused-argument
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "C90",  # mccabe
  "COM",  # flake8-commas
  # "D",  # pydocstyle
  "DTZ",  # flake8-datetimez
  "E",  # pycodestyle
  "EXE",  # flake8-executable
  "FA",  # flake8-future-annotations
  "FBT",  # flake8-boolean-trap
  "F",  # pyflakes
  "ICN",  # flake8-import-conventions
  # "I",  # isort
  "ISC",  # flake8-implicit-str-concat
  "N",  # pep8-naming
  "PL",  # Pylint
  "Q",  # flake8-quotes
  "RUF",  # Unused noqa
  "S",  # flake8-bandit
  "TID",  # flake8-tidy-imports
  "T",  # pyupgrade
  "T10",  # flake8-debugger
  "UP",  # pyupgrade
  "W",  # Warning
  "YTT",  # flake8-2020
]
lint.ignore = [
  "N812",  # lowercase-imported-as-non-lowercase
  "PLR0913",  # too-many-arguments
  "S101",  # assert
  "E501", # line-too-long
]
lint.unfixable = [
  "F401",  # Don't touch unused imports
]
lint.mccabe = { max-complexity = 14 }


[tool.mypy]
python_version = "3.9"
plugins = []
show_column_numbers = true
show_error_context = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
strict = true
ignore_missing_imports = true
disable_error_code = [ ]
enable_error_code = [
  "comparison-overlap",
  "explicit-override",
  "ignore-without-code",
  "no-any-return",
  "no-any-unimported",
  "no-untyped-call",
  "no-untyped-def",
  "possibly-undefined",
  "redundant-cast",
  "redundant-expr",
  "redundant-self",
  "truthy-bool",
  "truthy-iterable",
  "type-arg",
  "unimported-reveal",
  "unreachable",
  "unused-ignore",
]
